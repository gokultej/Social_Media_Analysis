import sys
from PyQt6.QtWidgets import QApplication, QWidget, QVBoxLayout, QLabel, QLineEdit, QPushButton
from PyQt6.QtCore import Qt
import random

# FizzBuzz function
def fizz_buzz(number):
    if number % 3 == 0 and number % 5 == 0:
        return 'FizzBuzz'
    elif number % 3 == 0:
        return 'Fizz'
    elif number % 5 == 0:
        return 'Buzz'
    else:
        return str(number)

class FizzBuzzGameApp(QWidget):
    def __init__(self):
        super().__init__()

        self.score = 0
        self.rounds_played = 0
        self.init_ui()

    def init_ui(self):
        # Widgets
        self.challenge_label = QLabel("Get ready for the FizzBuzz challenge!")
        self.input_edit = QLineEdit()
        self.result_label = QLabel("Your score: 0")
        self.submit_button = QPushButton("Submit")

        # Layout
        layout = QVBoxLayout()
        layout.addWidget(self.challenge_label)
        layout.addWidget(self.input_edit)
        layout.addWidget(self.result_label)
        layout.addWidget(self.submit_button)

        self.setLayout(layout)

        # Connect button click to submit function
        self.submit_button.clicked.connect(self.submit_answer)

        # Set up the application window
        self.setWindowTitle("FizzBuzz Game")
        self.setGeometry(300, 300, 400, 200)

        # Start the first challenge
        self.start_challenge()

        # Show the magic
        self.show()

    def start_challenge(self):
        # Check if the game is over (reached 30 rounds)
        if self.rounds_played >= 30:
            self.result_label.setText(f"Game Over! Final score: {self.score}")
            self.submit_button.setEnabled(False)
        else:
            # Generate a FizzBuzz challenge
            number = random.randint(1, 100)
            fizz_buzz_result = fizz_buzz(number)

            # Display the challenge
            self.challenge_label.setText(f"Enter the FizzBuzz value for {number}:")
            self.result_label.setText(f"Your score: {self.score} | Rounds played: {self.rounds_played + 1}")

            # Store the correct answer for later verification
            self.correct_answer = fizz_buzz_result

    def submit_answer(self):
        # Get the user's answer
        user_answer = self.input_edit.text()

        # Check if the answer is correct
        if user_answer.lower() == self.correct_answer.lower():
            self.score += 1

        # Increment rounds played
        self.rounds_played += 1

        # Start a new challenge
        self.start_challenge()


if __name__ == '__main__':
    app = QApplication(sys.argv)
    game = FizzBuzzGameApp()
    sys.exit(app.exec())

